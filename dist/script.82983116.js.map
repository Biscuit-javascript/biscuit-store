{"version":3,"sources":["../src/core/repositories.js","../src/core/debugger.js","../src/core/emitter.js","../src/core/helper.js","../src/core/dispatch.js","../src/core/utils.js","../src/core/store.js","../src/core/creator.js","../src/index.js","../src/script.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["collections","repositories","states","middlewares","settings","strictMode","debugCollection","writeLog","type","message","repoName","Object","keys","length","line","stack","split","createLog","name","file","level","repo","data","key","Log","Error","constructor","call","Warning","console","warn","CreateError","messages","noListener","noValidAction","createEmmitor","taskBuffer","subscribeAction","taskName","listener","state","task","todo","id","params","remove","splice","subscribeActions","actions","tasks","action","push","dispatchAction","forEach","undefined","emitter","getStateRepo","getRepository","content","activeMiddlewares","context","fn","middle","payload","gettter","instance","freeze","compareObject","firstState","lastState","propInFirst","propInLast","prop","dispatchProto","prev","act","payData","before","merge","after","resolve","Promise","then","dispatchInitMiddleware","newPayload","throttle","callback","limit","waiting","apply","arguments","setTimeout","debounce","isCooldown","sandbox","run","throt","initialThrottle","timer","throttleCaller","args","memoize","cache","n","result","value","regex","matches","prototype","toString","match","toLowerCase","noRepo","noState","initialType","actionError","subscriber","promise","getState","getRepo","addRepo","dispatch","voids","subscribeToState","that","e","reject","subscribeToStore","manager","pull","replaceRepo","replaceState","mergeState","targetAction","item","compareStates","compareWithState","compareStateWithInstance","compareRepoWithInstance","clone","update","props","storageNameError","fnName","noStoreParams","noRepoName","middleNoFunc","debuggerNoFunc","actionString","repoNotFind","repoExists","newRepo","initial","subscribe","get","add","createStateTo","createNewState","stns","branch","bind","options","actionStr","actionParams","initialActions","createActions","stateCollection","collection","compile","combineStateCollections","getStateCollection","all","fromRepo","outOfState","stateName","out","filter","middleware","s","createDebuger","createStore","target","output","store","param","paramType","debugger","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","overlay","createErrorOverlay","document","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","some","cb"],"mappings":"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","file":"script.82983116.js","sourceRoot":"../exemples","sourcesContent":["/** actions collection */\nexport let collections = {};\n/** storage instance */\nexport const repositories = {};\n/** states instance */\nexport const states = {};\n/** middlewares list */\nexport const middlewares = {};\n/** store settings */\nexport const settings = {\n    strictMode: {},\n};","\nimport { settings } from './repositories';\n\n/** debuger list */\nexport const debugCollection = {};\n\n/**\n * Write log object\n * @param {string} message message\n * @param {string} repoName repository name\n */\nconst writeLog = function (type, message, repoName) {\n    if (Object.keys(debugCollection).length > 0) {\n        const line = this.stack.split('\\n')[1].split(':')[2];\n        createLog(\n            {\n                message: this.name + ': ' + message,\n                file: line,\n                level: repoName ? 'local' : 'global',\n                repo: repoName,\n                type,\n            },\n            repoName\n        );\n    }\n};\n\n/**\n * This method processes the storage logs\n * and outputs them to the debugger if necessary.\n * @param {any} data is error -> new Error, is warn -> string\n * @param {string} repoName repository name\n * @public\n */\nexport const createLog = function (data, repoName) {\n    for (const key in debugCollection) {\n        if (key === repoName) {\n            debugCollection[key](data);\n        }\n\n        if (!repoName) {\n            debugCollection[key](data);\n        }\n    }\n};\n\n/**\n * Create  log\n * @param {string} message message\n * @param {string} repoName repository name\n * @public\n */\nexport class Log extends Error {\n    constructor(message, repoName) {\n        super(message);\n        this.name = 'Biscuit log';\n        writeLog.call(this, 'log', message, repoName);\n    }\n}\n\n/**\n * Create warning log\n * @param {string} message message\n * @param {string} repoName repository name\n * @public\n */\nexport class Warning extends Error {\n    constructor(message, repoName) {\n        super(message);\n\n        if (settings.strictMode[repoName]) {\n            // eslint-disable-next-line no-console\n            console.warn(message);\n        }\n\n        this.name = 'Biscuit warn';\n        writeLog.call(this, 'warning', message, repoName);\n    }\n}\n\n/**\n * Create error log\n * @param {string} message message\n * @param {string} repoName repository name\n * @public\n */\nexport class CreateError extends Error {\n    constructor(message, repoName) {\n        super(message);\n        this.name = 'Biscuit error';\n        writeLog.call(this, 'error', message, repoName);\n    }\n}","import { Warning, CreateError, Log } from './debugger';\n\nconst messages = {\n    noListener: 'The subscriber\\'s listener must be a function.',\n    noValidAction: 'An invalid dependencies was processed.',\n};\n\n/**\n * Module of the library responsible for creating tasks and subscribing to them.\n * @param  {string} action action name\n * @return {object} methods\n * @public\n */\nfunction createEmmitor() {\n    const taskBuffer = {};\n\n    return {\n        /**\n\t\t * This method allows you to subscribe to an action.\n\t\t * Creates a task that puts its own callback function,\n\t\t * which should then be started by the dispatcher\n\t\t * @param {string} stateName name of the state to subscribe to\n\t\t * @param {function} listener callback function\n\t\t * @param {string} state store state\n\t\t * @return {object{params: object, remove: function}} returned task id\n\t\t * @public\n\t\t */\n        subscribeAction: (taskName, listener, state) => {\n            if (typeof listener !== 'function') {\n                throw new CreateError(messages.noListener, taskName);\n            }\n\n            if (!taskBuffer[taskName]) {\n                taskBuffer[taskName] = [];\n            }\n            /** create task */\n            const task = {\n                state,\n                name: taskName,\n                todo: listener,\n                id: taskBuffer[taskName].length,\n            };\n            /** write task to buffer */\n            taskBuffer[task.name][task.id] = task;\n\n            new Log(`subscribe -> store: ${taskName}, state: ${state}`);\n            return {\n                /** task params */\n                params: task,\n                /**\n\t\t\t\t * Remove listner\n\t\t\t\t */\n                remove: () => {\n                    new Log(\n                        `unsubscribe -> store: ${task.name}, state: ${task.state}`\n                    );\n                    taskBuffer[task.name].splice(task.id, 1);\n                },\n            };\n        },\n\n        /**\n\t\t * This method allows you to subscribe to multiple actions.\n\t\t * Creates multiple tasks that run a single callback function.\n\t\t * @param {actions[object{repo: string, store: string}]} actions array actions\n\t\t * @param {function} listener callback\n\t\t * @return {}\n\t\t */\n        subscribeActions: (actions, listener) => {\n            if (typeof listener !== 'function') {\n                throw new CreateError(messages.noListener);\n            }\n\n            const tasks = [];\n            for (const action of actions) {\n                new Log(\n                    `subscribe -> store: ${action.repo}, state: ${action.state}`\n                );\n\n                if (!action.repo) {\n                    throw new CreateError(messages.noValidAction);\n                }\n\n                if (!taskBuffer[action.repo]) {\n                    taskBuffer[action.repo] = [];\n                }\n                /** create task */\n                const task = {\n                    state: action.state,\n                    name: action.repo,\n                    todo: listener,\n                    id: taskBuffer[action.repo].length,\n                };\n                /** write task to buffer */\n                taskBuffer[task.name][task.id] = task;\n                /** write tasks to an array, for subsequent\n\t\t\t\t *  deletion via the remove method */\n                tasks.push(task);\n            }\n\n            return {\n                /** tasks array */\n                params: tasks,\n                /**\n\t\t\t\t * Remove listners\n\t\t\t\t */\n                remove: () => {\n                    for (const task of tasks) {\n                        new Log(\n                            `unsubscribe -> store: ${task.name}, state: ${task.state}`\n                        );\n                        taskBuffer[task.name].splice(task.id, 1);\n                    }\n                },\n            };\n        },\n\n        /**\n\t\t * Starts all tasks that match the specified state name\n\t\t * and passes data to their callback functions.\n\t\t * @param {object{repo: string, state: string}} action action params\n\t\t * @async\n\t\t * @public\n\t\t */\n        dispatchAction: (action) => {\n            new Log(\n                `dispatch -> store: ${action.repo}, state: ${action.state}`\n            );\n\n            if (taskBuffer[action.repo]) {\n                taskBuffer[action.repo].forEach((task) => {\n                    /**\n\t\t\t\t\t * If the status field is not defined,\n\t\t\t\t\t * then run the task without additional checks, if the field is found,\n\t\t\t\t\t * then perform a state comparison\n\t\t\t\t\t */\n                    if (task.state === action.state) {\n                        task.todo(task);\n                    }\n\n                    if (task.state === undefined) {\n                        task.todo(task);\n                    }\n                });\n                return;\n            }\n\n            new Warning(\n                `store \"${action.repo}\" has no active subscriptions.`,\n                action.repo\n            );\n        },\n    };\n}\n\nexport const emitter = createEmmitor();","import { middlewares, states, repositories } from './repositories';\n\nexport function getStateRepo(action) {\n    return states[`\"${action.state}\"`][action.repo];\n}\n\nexport function getRepository(name) {\n    return repositories[name].content;\n}\n\n/**\n * Helper method for running middleware\n * @param {object} context handler context\n * @param {function} fn callback\n * @async\n * @private\n */\nexport async function activeMiddlewares(context, fn = () => null) {\n    if (middlewares[context.repo]) {\n        await middlewares[context.repo].forEach((middle) => {\n            middle(context, fn);\n        });\n    } else {\n        fn(context.payload);\n    }\n}\n\n/**\n * This method is used to get the values of the object without\n * the possibility of overwriting.\n * by attempting to write generates an error.\n * @param {object} instance object to extract\n * @return {object} returns a modified copy of the object\n * @private\n */\nexport function gettter(instance) {\n    return Object.freeze({ ...instance });\n}\n\n/**\n * Helper method for comparing two objects\n * Warning: can't compare methods\n * @param {object} firstState first object\n * @param {object} lastState last object\n * @return {bool}\n * @private\n */\nexport function compareObject(firstState, lastState) {\n    let propInFirst = 0;\n    let propInLast = 0;\n    let prop;\n\n    if (firstState === lastState) {\n        return true;\n    }\n\n    if (\n        firstState === null ||\n\t\ttypeof firstState !== 'object' ||\n\t\tlastState === null ||\n\t\ttypeof lastState !== 'object'\n    ) {\n        return false;\n    }\n\n    for (prop in firstState) {\n        propInFirst += 1;\n    }\n\n    for (prop in lastState) {\n        propInLast += 1;\n\n        if (\n            !(prop in firstState) ||\n\t\t\t!compareObject(firstState[prop], lastState[prop])\n        ) {\n            return false;\n        }\n    }\n\n    return propInFirst === propInLast;\n}","import { repositories } from './repositories';\nimport { activeMiddlewares, getStateRepo } from './helper';\nimport { emitter } from './emitter';\n\nexport function dispatchProto({ action, prev, act, payData }) {\n    /**\n\t * Call before state change\n\t * @param {function} fn callback\n\t * @public\n\t */\n    this.before = (fn) => {\n        fn(prev);\n        return this;\n    };\n\n    /**\n\t * Merge state into repository\n\t * @public\n\t */\n    this.merge = () => {\n        repositories[action.repo].content = {\n            ...act,\n            ...payData,\n        };\n\n        return this;\n    };\n\n    /**\n\t * Call after state change\n\t * @param {function} fn callback\n\t * @async\n\t * @public\n\t */\n    this.after = async (fn) => {\n        let task;\n        const call = function (resolve) {\n            resolve({\n                ...getStateRepo(action).content,\n            });\n            task.remove();\n        };\n\n        await new Promise((resolve) => {\n            task = emitter.subscribeAction(\n                action.repo,\n                () => call(resolve),\n                action.state\n            );\n        }).then(fn);\n        return this;\n    };\n}\n\nexport async function dispatchInitMiddleware({ action, payData, act }) {\n    return await new Promise((resolve) => {\n        activeMiddlewares(\n            {\n                action: action.state,\n                repo: action.repo,\n                payload: payData,\n                state: act,\n            },\n            (newPayload) => {\n                resolve(newPayload);\n            }\n        );\n    });\n}","/**\n * Creates a throttled function that only invokes func\n * at most once per every wait milliseconds.\n * @param {function} callback target function\n * @param {number} limit counter\n * @return {function}\n */\nexport function throttle(callback, limit) {\n    let waiting = false;\n    return function () {\n        if (!waiting) {\n            callback.apply(this, arguments);\n            waiting = true;\n            setTimeout(() => {\n                waiting = false;\n            }, limit);\n        }\n    };\n}\n\n/**\n * Creates a debounced function that delays invoking func\n * until after wait milliseconds have elapsed since\n * the last time the debounced function was invoked.\n * @param {function} callback target function\n * @param {number} limit counter\n * @return {function}\n */\nexport function debounce(callback, limit) {\n    let isCooldown = false;\n\n    return function () {\n        if (isCooldown) {\n            return;\n        }\n        callback.apply(this, arguments);\n        isCooldown = true;\n        setTimeout(() => isCooldown = false, limit);\n    };\n}\n\n/**\n * This method set allows you to. save the state of functions\n * tied to the timer. Required for the case when the timer\n * function is initialized in a method with a frequent call,\n * for example, in the react function component.\n * @param {function} fn target function\n*/\nexport const sandbox = (fn) => {\n    return {\n        run: (function () {\n            let throt = null;\n\n            /** initial run\n             * @param {function} call target function\n             * @param {number} timer timeout\n            */\n            const initialThrottle = (call, timer) => {\n                if (!throt) {\n                    throt = fn(call, timer);\n                }\n            };\n\n            /** initial run\n             * @param {args[any]} args arguments\n             * @return {function}\n             */\n            const throttleCaller = (...args) => {\n                return throt(...args);\n            };\n\n            /** initial\n            * @param {function} call target function\n            * @param {number} timer timeout\n            * @return {function} throttleCaller\n            */\n            return (call, timer) => {\n                initialThrottle(call, timer);\n                return throttleCaller;\n            };\n        })(),\n    };\n};\n\n/**\n * memoized function\n * @param {function} fn target function\n * @return {function}\n*/\nexport const memoize = (fn) => {\n    const cache = {};\n    return (...args) => {\n        const n = args[0];\n        if (n in cache) {\n            return cache[n];\n        } else {\n            const result = fn(n);\n            cache[n] = result;\n            return result;\n        }\n    };\n};\n\n/**\n * Strict type checking\n * @param {*} value any value\n */\nexport function type(value) {\n    const regex = /^\\[object (\\S+?)]$/;\n    const matches = Object.prototype.toString.call(value).match(regex) || [];\n    return (matches[1] || 'undefined').toLowerCase();\n}\n","/**\n * BISCUIT STORAGE\n * @autor: Zhulev Philipp\n * @version: 1.0.0\n * @license MIT\n */\nimport {\n    repositories,\n    states,\n} from './repositories';\nimport {\n    emitter,\n} from './emitter';\nimport {\n    gettter,\n    getStateRepo,\n    getRepository,\n    compareObject,\n} from './helper';\nimport { dispatchProto, dispatchInitMiddleware } from './dispatch';\nimport { CreateError } from './debugger';\nimport { type } from './utils';\n\nconst messages = {\n    noRepo: (name) => `repository <${name}> not found.`,\n    noState: (name) => `state <${name}> not found.`,\n    initialType: 'The initial must be an object.',\n};\n\nconst actionError = (action) => {\n    if (!action || !action.repo || !action.state) {\n        throw new CreateError('Invalid action parameters.');\n    }\n\n    if (!repositories[action.repo]) {\n        throw new CreateError(messages.noRepo(action.repo));\n    }\n\n    if (!states[`\"${action.state}\"`]) {\n        throw new CreateError(messages.noState(action.state), action.repo);\n    }\n};\n\n/**\n * Allows you to subscribe to the store. and tracks its change.\n * @param {string} repo repository name\n * @param {function} fn callback\n * @param {string} state state name\n * @return {Promise}\n * @async\n */\nconst subscriber = function (repo, fn, state) {\n    let task;\n    const promise = new Promise((resolve) => {\n        task = emitter.subscribeAction(repo, () => {\n            /** if there is a state then pick it up */\n            const data = state\n                ? getState({ repo, state })\n                : getRepo(repo);\n            fn(data, task);\n            resolve(data);\n        }, state);\n    });\n\n    const resolve = this.resolve(promise);\n    resolve['unsubscribe'] = task.remove;\n\n    return resolve;\n};\n\n/**\n * This method allows you to add new values to the repository.\n * Accepts the storage name and object.\n * @param {string} name repository name\n * @param {object} instance object with added data\n * @public\n */\nexport function addRepo(name, instance) {\n    if (!repositories[name]) {\n        throw new CreateError(messages.noRepo(name));\n    }\n\n    if (type(instance) !== 'object') {\n        throw new CreateError(messages.initialType);\n    }\n\n    repositories[name].content = {\n        ...getRepository(name),\n        ...instance,\n    };\n}\n\n/**\n * This method is used to get data from the storage by its key.\n * Warning: Storage data cannot be changed directly.\n * You can replace the values either with the \"addRepo\"\n * method or with state injection via \"manager\".\n * @param {string} name storage name\n * @return {object} storage data\n * @public\n */\nexport function getRepo(name) {\n    if (!repositories[name]) {\n        throw new CreateError(messages.noRepo(name));\n    }\n\n    return gettter({ ...getRepository(name) });\n}\n\n/**\n * This method is needed to get the storage state\n * Warning: Storage data cannot be changed directly.\n * You can replace the values either with the \"dispatch (...)\"\n * method or with an implementation via \"manager\".\n * @param {object{repo: string, state: string}} action the parameters of the action\n * @return {object} state data\n * @public\n */\nexport function getState(action) {\n    actionError(action);\n    return gettter({ ...getStateRepo(action).content });\n}\n\n/**\n * This is one of the most important methods.\n * allows you to asynchronously update and change the state of the storage.\n *\n * The first argument accepts action parameters,\n * the second argument accepts an object with new data\n * or a callback function that returns the past state\n * as an argument and returns a new state.\n *\n * Dispatch also returns several methods for working with states.\n * @param {object{repo: string, state: string}} action the parameters of the action\n * @param {object | function} payload payload data or callback function\n * @return {object} returns methods: before, after, merge\n * @async\n * @public\n */\nexport function dispatch(action, payload = {}) {\n    const voids = {};\n\n    actionError(action);\n\n    if (type(payload) !== 'function' && type(payload) !== 'object') {\n        throw new CreateError('The payload must be an object or function.', action.repo);\n    }\n\n    (async function () {\n        const act = getStateRepo(action).content;\n        const prev = { ...act };\n\n        /** if the function\n         * then pass the current state to the callback  */\n        let payData = typeof payload === 'function'\n            ? payload(prev)\n            : payload;\n\n        dispatchProto.call(voids, {\n            action,\n            prev,\n            act,\n            payData,\n        });\n\n        /** initial middlewares */\n        payData = await dispatchInitMiddleware({ action, payData, act });\n\n        /** update state data */\n        getStateRepo(action).content = {\n            ...act,\n            ...payData,\n        };\n\n        /** create dispatch action */\n        emitter.dispatchAction(action);\n    })();\n\n    return voids;\n}\n\n/**\n * This is one of the most important methods.\n * Allows you to subscribe to the state. and tracks its change.\n * The first argument takes the parameters of the action.\n * results can be obtained through the callback of the second\n * argument or through the return promise.\n * @param {object{repo: string, state: string}} action the parameters of the action\n * @param {function} fn callback\n * @callback\n * @async\n * @public\n */\nexport function subscribeToState(action, fn = () => undefined) {\n    const that = Promise;\n    try {\n        actionError(action);\n        return subscriber.call(that, action.repo, fn, action.state);\n    } catch (e) {\n        return that.reject(e);\n    }\n}\n\n/**\n * This is one of the most important methods.\n * Allows you to subscribe to the store. and tracks its change.\n * The first argument takes the name store.\n * results can be obtained through the callback of the\n * second argument or through the return promise.\n * @param {string} repo repository name\n * @param {function} fn callback\n * @callback\n * @async\n * @public\n */\nexport function subscribeToStore(repo, fn = () => undefined) {\n    const that = Promise;\n    try {\n        if (!repositories[repo]) {\n            throw new CreateError(messages.noRepo(repo));\n        }\n\n        return subscriber.call(that, repo, fn);\n    } catch (e) {\n        return that.reject(e);\n    }\n}\n\n/**\n * The State Manager allows you to manage the storage and its state.\n * Provides a set of methods for two-way merge, replace, copy,\n * and other actions between the selected storage and state.\n * @param {object{repo: string, state: string}} action the parameters of the action\n * @return {object} returns a set of methods\n * @public\n */\nexport function manager(action) {\n    actionError(action);\n    return {\n        /**\n         * This method will combine data from the state with data from the storage.\n         * @public\n         */\n        merge: () => {\n            repositories[action.repo].content = {\n                ...getRepository(action.repo),\n                ...getStateRepo(action).content,\n            };\n        },\n\n        /**\n         * This method will merge data from the storage with data from the state.\n         * @public\n         */\n        pull: () => {\n            getStateRepo(action).content = {\n                ...getStateRepo(action).content,\n                ...getRepository(action.repo),\n            };\n        },\n\n        /**\n         * This method will replace the data from the storage with state data.\n         * @public\n         */\n        replaceRepo: () => {\n            repositories[action.repo].content = {\n                ...getStateRepo(action).content,\n            };\n        },\n\n        /**\n         * This method will replace the data from the state with the storage data.\n         * @public\n         */\n        replaceState: () => {\n            getStateRepo(action).content = {\n                ...getRepository(action.repo),\n            };\n        },\n\n        /**\n         * This method will merge the data of the selected state\n         * with the data of the state specified in the arguments.\n         * @param {object{repo: string, state: string}} targetAction\n         * the action that you want to merge\n         * @public\n         */\n        mergeState: (targetAction) => {\n            actionError(targetAction);\n            getStateRepo(action).content = {\n                ...getStateRepo({\n                    state: targetAction.state,\n                    repo: action.repo,\n                }).content,\n                ...getStateRepo(action).content,\n            };\n        },\n\n        /**\n         * This method removes the storage and its copies from all states.\n         * WARNING: This method can be useful for optimization,\n         * but it can make the code non-obvious,\n         * which will lead to difficulties in support.\n         * @public\n         */\n        remove: () => {\n            delete repositories[action.repo];\n            Object.keys(states[`\"${action.state}\"`]).forEach((item) => {\n                if (item === action.repo) {\n                    delete states[`\"${action.state}\"`][action.repo];\n                }\n            });\n        },\n\n        /**\n         * This method compares two states for identity\n         * WARNING: states should not contain methods\n         * @param {object{repo: string, state: string}} targetAction\n         * the action that you want to compare\n         * @return {bool}\n         * @public\n         */\n        compareStates: (targetAction) => {\n            actionError(targetAction);\n            return compareObject(\n                getStateRepo(action).content,\n                ...getStateRepo({\n                    state: targetAction.state,\n                    repo: action.repo,\n                }).content,\n            );\n        },\n\n        /**\n         * Сompare state and repository\n         * WARNING: states should not contain methods\n         * @return {bool}\n         * @public\n         */\n        compareWithState: () => {\n            return compareObject(\n                getRepository(action.repo),\n                getStateRepo(action).content\n            );\n        },\n\n        /**\n         * compare state and instance object\n         * WARNING: states should not contain methods\n         * @param {object} instance object instance\n         * @return {bool}\n         * @public\n         */\n        compareStateWithInstance: (instance) => {\n            return compareObject(getStateRepo(action).content, instance);\n        },\n\n        /**\n         * compare repository and instance object\n         * WARNING: states should not contain methods\n         * @param {object} instance object instance\n         * @return {bool}\n         * @public\n         */\n        compareRepoWithInstance: (instance) => {\n            return compareObject(getRepository(action.repo), instance);\n        },\n\n        /**\n         * Clones the selected storage and its state.\n         * WARNING: It is best to avoid using this method,\n         * as the best practice would be to do initialization of repositories in one place.\n         * Copying the repository can lead to code support difficulties.\n         * @param {string} name name for the new storage\n         * @public\n         */\n        clone: (name) => {\n            repositories[name] = { ...getRepository(action.repo) };\n            states[`\"${action.state}\"`][name] = {\n                ...getStateRepo(action).content,\n            };\n        },\n\n        /**\n         * Updates the status of the repository.\n         * This method is equivalent to dispatch(...)\n         * @public\n         */\n        update: () => {\n            dispatch(action, {});\n        },\n\n        /**\n         * Returns parameters of the selected action\n         * @public\n         */\n        props: action,\n    };\n}\n","import { debugCollection, CreateError } from './debugger';\nimport {\n    collections,\n    repositories,\n    states,\n    middlewares,\n    settings,\n} from './repositories';\n\nimport {\n    dispatch,\n    subscribeToState,\n    getState,\n    getRepo,\n    subscribeToStore,\n    addRepo,\n} from './store';\nimport { type } from './utils';\n\n/** debug messages */\nconst messages = {\n    storageNameError: (fnName) =>\n        `biscuit ${fnName} error: storage name is not a string.`,\n    noStoreParams:\n\t\t'The createStore method must contain the storage parameters.',\n    noRepoName: 'The repository name is a required field.',\n    middleNoFunc: 'Middleware should be provided as a feature.',\n    debuggerNoFunc: 'Debugger should be provided as a feature.',\n    actionString: 'The state name must be a string.',\n    repoNotFind: 'Repository not found.',\n    initialType: 'The initial must be an object.',\n    repoExists: 'A repository with this name already exists.',\n};\n\n/**\n * This method is responsible for creating a new repository.\n * Takes as the first argument a string with the repository name.\n * and the initial state of the storage as the second argument\n * @param {string} name storage name\n * @param {object} initial initial object\n * @public\n */\nexport function newRepo(name, initial = {}) {\n    if (!name) {\n        throw new CreateError(messages.noRepoName);\n    }\n\n    if (repositories[name]) {\n        throw new CreateError(messages.repoExists);\n    }\n\n    if (typeof name !== 'string') {\n        throw new CreateError(messages.storageNameError('newRepo'));\n    }\n\n    if (type(initial) !== 'object') {\n        throw new CreateError(messages.initialType, name);\n    }\n\n    repositories[name] = { content: initial };\n\n    return {\n        repo: name,\n        /** Subscribe by change @param {function} fn */\n        subscribe: (fn) => subscribeToStore(name, fn),\n        /** get reposiory */\n        get: () => getRepo(name),\n        /** add to reposiory @param {object} instance */\n        add: (instance) => addRepo(name, instance),\n    };\n}\n\n/**\n * This method binds states to the storage via the \"add\" method.\n * Gets the storage name string as an argument.\n * @param {object} params name of the linked storage\n * @return {object} returns the \"add\" method\n * @public\n */\nexport function createStateTo(params) {\n    if (!repositories[params.repo]) {\n        throw new CreateError(messages.repoNotFind);\n    }\n\n    const createNewState = (stns) => {\n        if (!stns.branch) {\n            return repositories[params.repo];\n        }\n\n        return {\n            content: {\n                ...repositories[params.repo].content,\n                ...stns.initial,\n            },\n        };\n    };\n\n    return {\n        /** This method binds the state to the selected storagee\n\t\t * @param {string} action state name\n\t\t * @public\n\t\t */\n        bind: (action, options = { branch: false, initial: {} }) => {\n            if (typeof action !== 'string') {\n                throw new CreateError(messages.actionString, params.repo);\n            }\n\n            const actionStr = `\"${action}\"`;\n\n            states[actionStr] = {\n                ...states[actionStr],\n                [params.repo]: createNewState(options),\n            };\n\n            const actionParams = {\n                repo: params.repo,\n                state: action,\n            };\n\n            return {\n                ...actionParams,\n                /**\n\t\t\t\t * Update state\n\t\t\t\t * @param {object} payload\n\t\t\t\t * @public\n\t\t\t\t */\n                dispatch: (payload = {}) => dispatch(actionParams, payload),\n                /**\n\t\t\t\t * Subscribe to state\n\t\t\t\t * @param {function} fn callback\n\t\t\t\t * @public\n\t\t\t\t */\n                subscribe: (fn) => subscribeToState(actionParams, fn),\n\n                /**\n\t\t\t\t * Get state\n\t\t\t\t * @public\n\t\t\t\t */\n                getState: () => getState(actionParams),\n            };\n        },\n        /** repository key */\n        repo: params.repo,\n    };\n}\n\n/**\n * This helper method takes the first parameter \"createactionsTo\"\n * and adds actions to it from the string array of the second argument.\n * @param {object} createActions createactionsto(storage name) method\n * @param {array[string]} actions actions string array\n * @public\n */\nexport function initialActions(createActions, actions) {\n    actions.forEach((item) => {\n        createActions.bind(item);\n    });\n}\n\n/**\n * This helper method converts the actions received via the argument to an array\n * @param {args[string]} actions accepts multiple actions as arguments\n * @return {object} returns the \"compile\" method\n * @public\n */\nexport function stateCollection(...actions) {\n    const collection = {};\n    return {\n        /**\n\t\t * compile state collection\n\t\t * @return {object} actions collection\n\t\t * @public\n\t\t */\n        compile: () => {\n            for (let action of actions) {\n                collection[action.repo].push({ ...action });\n            }\n\n            return collection;\n        },\n    };\n}\n\n/**\n * This helper method can combine multiple collections of actions.\n * Accepts \"stateCollection(...action)\"\n * @param {args[object]} collection array actions\n * @public\n */\nexport function combineStateCollections(...collection) {\n    collection.forEach((item) => {\n        collections = { ...collections, ...item.compile() };\n    });\n}\n\n/**\n * A set of helper methods for extracting actions from collections\n * @static\n * @public\n */\nexport const getStateCollection = {\n    /**\n\t * Get the entire collection actions\n\t * @return {object} collections instance\n\t * @public\n\t */\n    all: () => ({ ...collections }),\n\n    /**\n\t * Get a collection by matching the storage name\n\t * @param {string} repo storage name\n\t * @return {object} collections instance\n\t * @public\n\t */\n    fromRepo: (repo) => ({ ...collections[repo] }),\n\n    /**\n\t * Get the result filtered by state name\n\t * @param {string} stateName state name\n\t * @return {array[object]} state list\n\t * @public\n\t */\n    outOfState: (stateName) => {\n        let out = null;\n        Object.keys(collections).forEach((key) => {\n            out = collections[key].filter(({ state }) => state === stateName);\n        });\n\n        return out;\n    },\n};\n\n/**\n * This method allows you to add middleware for the state handler.\n * @param {string} action the parameters of the action\n * @return {object} returns a set of methods\n * @public\n */\nexport function middleware(action) {\n    const s = action.repo;\n    return {\n        /**\n\t\t * Adds a handler to the middleware task list.\n\t\t * @param {function} fn middle function\n\t\t * @public\n\t\t */\n        add: (fn) => {\n            if (typeof fn !== 'function') {\n                throw new CreateError(messages.middleNoFunc, s);\n            }\n\n            if (middlewares[s]) {\n                middlewares[s].push(fn);\n            } else {\n                middlewares[s] = [fn];\n            }\n        },\n    };\n}\n\n/**\n * This method allows you to add your own debugger.\n * The debugger will accept and output logs instead of the standard debugger.\n * @param {string} repo a string with the name of the repository\n * @param {function} fn debugger callback function\n * @public\n */\nexport function createDebuger(repo, fn) {\n    if (typeof fn !== 'function') {\n        throw new CreateError(messages.debuggerNoFunc);\n    }\n\n    debugCollection[repo] = fn;\n}\n\n/**\n * Monolithic method for creating a biscuit storage.\n * This is the preferred method for creating a repository.\n * @param {import('../types/createStore').StoreSettings} options\n * an object containing the store settings\n * @return {import('../types/createStore').StoreParams}\n * returns a set of actions\n * @public\n */\nexport function createStore(options) {\n    if (!options) {\n        throw new CreateError(messages.noStoreParams);\n    }\n\n    /** DefaultParams */\n    const params = { strictMode: true, ...options };\n\n    /** Create a new storage */\n    const repo = newRepo(params.repo.name, params.repo.initial);\n    const target = createStateTo(repo);\n\n    /** Set of storage parameters */\n    const output = {\n        store: { ...repo },\n        actions: {},\n    };\n\n    /** Adding States to the repository */\n    if (params.states) {\n        for (const key in params.states) {\n            const param = params.states[key];\n            const paramType = typeof param === 'string';\n            output.actions[key] = target.bind(\n                paramType ? param : param.name,\n                paramType\n                    ? {}\n                    : { initial: param.initial, branch: param.branch }\n            );\n        }\n    }\n\n    /** Adding middleware to the repository */\n    if (params.middleware && params.middleware.length > 0) {\n        const middle = middleware(target);\n        for (const fn of params.middleware) {\n            middle.add(fn);\n        }\n    }\n\n    /** Adding debuger to the repository */\n    if (params.debugger) {\n        createDebuger(params.repo.name, params.debugger);\n    }\n\n    /** Strict mod */\n    settings.strictMode[params.repo.name] = params.strictMode;\n\n    return output;\n}","import { createStore, newRepo } from './core/creator';\nimport {\n    manager,\n    dispatch,\n    getRepo,\n    getState,\n    addRepo,\n    subscribeToState,\n    subscribeToStore,\n} from './core/store';\n\nexport {\n    createStore,\n    manager,\n    dispatch,\n    getRepo,\n    getState,\n    addRepo,\n    subscribeToState,\n    subscribeToStore,\n    newRepo,\n};","import { createStore } from './index';\n\nconst { store, actions } = createStore({\n    repo: {\n        name: 'user',\n        initial: { value: 0 },\n    },\n    states: {\n        testAdd: 'TEST/ADD',\n        testRemove: 'TEST/ADD',\n    },\n});","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}